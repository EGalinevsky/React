{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, unfollow, setUsers, setCurrentPageAC, setUsersTotalCountAC, toggleIsFetching } from './../../redux/usersRedecer';\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"./../common/preloader/preloader\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.selectedPageActive(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        followUsers: this.props.followUsers,\n        unFollowUsers: this.props.unFollowUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    followUsers: userId => {\n      dispatch(followAC(userId));\n    },\n    unFollowUsers: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: userId => {\n      dispatch(setUsersAC(userId));\n    },\n    selectedPageActive: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, {\n  followUsers: follow,\n  unFollowUsers: unfollow,\n  setUsers: setUsers,\n  selectedPageActive: setCurrentPage,\n  setTotalUsersCount: setUsersTotalCount,\n  toggleIsFetching: toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/Users/UsersContainer.jsx"],"names":["React","connect","followAC","unfollow","setUsers","setCurrentPageAC","setUsersTotalCountAC","toggleIsFetching","axios","Users","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","selectedPageActive","get","pageSize","then","response","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","users","followUsers","unFollowUsers","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId","unfollowAC","setUsersAC","toggleIsFetchingAC","follow","setCurrentPage","setUsersTotalCount"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {followAC, unfollow, setUsers, setCurrentPageAC, setUsersTotalCountAC, toggleIsFetching} from './../../redux/usersRedecer';\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"./../common/preloader/preloader\"\r\n\r\nclass UsersContainer extends React.Component {    \r\n    \r\n    componentDidMount(){\r\n        this.props.toggleIsFetching (true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n        this.props.toggleIsFetching(false)\r\n        this.props.setUsers(response.data.items);\r\n        this.props.setTotalUsersCount(response.data.totalCount)\r\n            });  \r\n    }\r\n    onPageChanged = (pageNumber) =>{\r\n        this.props.toggleIsFetching (true);\r\n        this.props.selectedPageActive(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n             \r\n        this.props.toggleIsFetching(false)\r\n        this.props.setUsers(response.data.items);\r\n            })\r\n    }\r\n    \r\n\r\n    render(){ \r\n       return <div>\r\n           {this.props.isFetching ? <Preloader /> : null}\r\n       <Users \r\n       \r\n       totalUsersCount={this.props.totalUsersCount} \r\n       pageSize={this.props.pageSize} \r\n       currentPage={this.props.currentPage}\r\n       onPageChanged={this.onPageChanged}\r\n       users={this.props.users}\r\n       followUsers={this.props.followUsers}\r\n       unFollowUsers={this.props.unFollowUsers}\r\n       /> \r\n       </div>\r\n       \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return{\r\n        followUsers: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unFollowUsers: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (userId) => {\r\n            dispatch(setUsersAC(userId))\r\n        },\r\n        selectedPageActive: (pageNumber) =>{\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) =>{\r\n            dispatch(setUsersTotalCountAC(totalCount))\r\n        },\r\n        toggleIsFetching:(isFetching) =>{\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    { \r\n    followUsers: follow,\r\n    unFollowUsers:unfollow,\r\n    setUsers:setUsers,\r\n    selectedPageActive: setCurrentPage,\r\n    setTotalUsersCount: setUsersTotalCount,\r\n    toggleIsFetching:toggleIsFetching\r\n    })\r\n    (UsersContainer);"]},"metadata":{},"sourceType":"module"}