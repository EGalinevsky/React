{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\common\\\\paginator\\\\Paginator.jsx\";\nimport React from \"react\";\nimport s from \"./Paginator.module.css\";\n\nconst Paginator = ({\n  currentPage,\n  onPageChanged,\n  totalItemCount,\n  pageSize,\n  portionSize = 10\n}) => {\n  let pagesCount = Math.ceil(totalItemCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  tio;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), pages.map(p => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: currentPage === p ? s.selectedPageActive : s.selectedPage,\n        onClick: e => {\n          onPageChanged(p);\n        },\n        children: p\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/common/paginator/Paginator.jsx"],"names":["React","s","Paginator","currentPage","onPageChanged","totalItemCount","pageSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","tio","map","p","selectedPageActive","selectedPage","e"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,wBAAd;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,WADiB;AAEjBC,EAAAA,aAFiB;AAGjBC,EAAAA,cAHiB;AAIjBC,EAAAA,QAJiB;AAKjBC,EAAAA,WAAW,GAAG;AALG,CAAD,KAMZ;AACJ,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUL,cAAc,GAAGC,QAA3B,CAAjB;AAEA,MAAIK,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AACpCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACD;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACAQ,EAAAA,GAAG;AAEH,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,KAAK,CAACK,GAAN,CAAWC,CAAD,IAAO;AAChB,0BACE;AACE,QAAA,SAAS,EACPd,WAAW,KAAKc,CAAhB,GAAoBhB,CAAC,CAACiB,kBAAtB,GAA2CjB,CAAC,CAACkB,YAFjD;AAIE,QAAA,OAAO,EAAGC,CAAD,IAAO;AACdhB,UAAAA,aAAa,CAACa,CAAD,CAAb;AACD,SANH;AAAA,kBAQGA;AARH;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAbA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApCD;;KAAMf,S;AAsCN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({\r\n  currentPage,\r\n  onPageChanged,\r\n  totalItemCount,\r\n  pageSize,\r\n  portionSize = 10,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  tio\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      {pages.map((p) => {\r\n        return (\r\n          <button\r\n            className={\r\n              currentPage === p ? s.selectedPageActive : s.selectedPage\r\n            }\r\n            onClick={(e) => {\r\n              onPageChanged(p);\r\n            }}\r\n          >\r\n            {p}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n"]},"metadata":{},"sourceType":"module"}