{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport s from \"./Dialogs.module.css\";\nimport Message from \"./Message/Message\";\n\nconst Dialogs = props => {\n  /*We are doing here map*/\n  let dialogsElement = props.dialogsData.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: dialog.name,\n    id: dialog.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this));\n  let messageElements = props.messageData.map(messageEl => /*#__PURE__*/_jsxDEV(Message, {\n    message: messageEl.say,\n    id: messageEl.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this));\n  let newMessagePost = /*#__PURE__*/React.createRef();\n\n  let addMessagePost = () => {\n    alert('dwd');\n    let message = newMessagePost.current.value;\n    alert(message);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogs_item,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Dialogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), dialogsElement]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [messageElements, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.message__wrapper,\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: newMessagePost,\n          className: s.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.wrapper__btn,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addMessagePost,\n          className: s.btn,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/Dialogs/Dialogs.jsx"],"names":["React","DialogItem","s","Message","Dialogs","props","dialogsElement","dialogsData","map","dialog","name","id","messageElements","messageData","messageEl","say","newMessagePost","createRef","addMessagePost","alert","message","current","value","dialogs","dialogs_item","messages","message__wrapper","text","wrapper__btn","btn"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB;AACA,MAAIC,cAAc,GAAGD,KAAK,CAACE,WAAN,CAAkBC,GAAlB,CAAuBC,MAAD,iBACzC,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+B,IAAA,EAAE,EAAED,MAAM,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AAIA,MAAIC,eAAe,GAAGP,KAAK,CAACQ,WAAN,CAAkBL,GAAlB,CAAuBM,SAAD,iBAC1C,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,SAAS,CAACC,GAA5B;AAAiC,IAAA,EAAE,EAAED,SAAS,CAACH;AAA/C;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAIA,MAAIK,cAAc,gBAAGhB,KAAK,CAACiB,SAAN,EAArB;;AAEA,MAAIC,cAAc,GAAG,MAAK;AACxBC,IAAAA,KAAK,CAAC,KAAD,CAAL;AAEA,QAAIC,OAAO,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAArC;AACAH,IAAAA,KAAK,CAACC,OAAD,CAAL;AACD,GALD;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAElB,CAAC,CAACqB,OAAlB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAErB,CAAC,CAACsB,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGlB,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAEJ,CAAC,CAACuB,QAAlB;AAAA,iBACGb,eADH,eAEE;AAAK,QAAA,SAAS,EAAEV,CAAC,CAACwB,gBAAlB;AAAA,+BACE;AAAU,UAAA,GAAG,EAAEV,cAAf;AAA+B,UAAA,SAAS,EAAEd,CAAC,CAACyB;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,QAAA,SAAS,EAAEzB,CAAC,CAAC0B,YAAlB;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAGV,cAAlB;AAAmC,UAAA,SAAS,EAAEhB,CAAC,CAAC2B,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAtCD;;KAAMzB,O;AAuCN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n  /*We are doing here map*/\r\n  let dialogsElement = props.dialogsData.map((dialog) => (\r\n    <DialogItem name={dialog.name} id={dialog.id} />\r\n  ));\r\n\r\n  let messageElements = props.messageData.map((messageEl) => (\r\n    <Message message={messageEl.say} id={messageEl.id} />\r\n  ));\r\n\r\n  let newMessagePost = React.createRef();\r\n\r\n  let addMessagePost = () =>{\r\n    alert('dwd')\r\n\r\n    let message = newMessagePost.current.value;\r\n    alert(message);\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs_item}>\r\n        <h1> Dialogs</h1>\r\n        {dialogsElement}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {messageElements}\r\n        <div className={s.message__wrapper}>\r\n          <textarea ref={newMessagePost} className={s.text}></textarea>\r\n        </div>\r\n\r\n        <div className={s.wrapper__btn}>\r\n          <button onClick={ addMessagePost } className={s.btn}>send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n"]},"metadata":{},"sourceType":"module"}