{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setUsers, setCurrentPage, setUsersTotalCount, toggleIsFetching, toggleFollowingProgress } from './../../redux/usersRedecer';\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"./../common/preloader/preloader\";\nimport { usersAPI } from './../../api/api';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        toggleFollowingProgress: this.props.toggleFollowingProgress,\n        followingInProgress: this.props.followingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n}; // const mapDispatchToProps =(dispatch)=>{\n//     return{\n//         followUsers: (userId) => {\n//             dispatch(followAC(userId))\n//         },\n//         unFollowUsers: (userId) => {\n//             dispatch(unfollowAC(userId))\n//         },\n//         setUsers: (userId) => {\n//             dispatch(setUsersAC(userId))\n//         },\n//         selectedPageActive: (pageNumber) =>{\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalUsersCount: (totalCount) =>{\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         toggleIsFetching:(isFetching) =>{\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setUsersTotalCount,\n  toggleIsFetching,\n  toggleFollowingProgress\n})(UsersContainer);","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","unfollow","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching","toggleFollowingProgress","axios","Users","Preloader","usersAPI","UsersContainer","Component","onPageChanged","pageNumber","props","getUsers","pageSize","then","data","items","componentDidMount","render","isFetching","totalUsersCount","currentPage","users","followingInProgress","mapStateToProps","state","usersPage"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,cAApC,EAAoDC,kBAApD,EAAwEC,gBAAxE,EAA0FC,uBAA1F,QAAwH,4BAAxH;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;;AAEA,MAAMC,cAAN,SAA6Bb,KAAK,CAACc,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAKzCC,aALyC,GAKxBC,UAAD,IAAe;AAC3B,WAAKC,KAAL,CAAWV,gBAAX,CAA6B,IAA7B;AACA,WAAKU,KAAL,CAAWZ,cAAX,CAA0BW,UAA1B;AACAJ,MAAAA,QAAQ,CAACM,QAAT,CAAkBF,UAAlB,EAA8B,KAAKC,KAAL,CAAWE,QAAzC,EACCC,IADD,CACMC,IAAI,IAAI;AACV,aAAKJ,KAAL,CAAWV,gBAAX,CAA4B,KAA5B;AACA,aAAKU,KAAL,CAAWb,QAAX,CAAoBiB,IAAI,CAACC,KAAzB;AACC,OAJL;AAKH,KAbwC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAE,CAElB;;AAYDC,EAAAA,MAAM,GAAE;AACL,wBAAO;AAAA,iBACF,KAAKP,KAAL,CAAWQ,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAwC,IADtC,eAEP,QAAC,KAAD;AAEA,QAAA,eAAe,EAAE,KAAKR,KAAL,CAAWS,eAF5B;AAGA,QAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWE,QAHrB;AAIA,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWU,WAJxB;AAKA,QAAA,aAAa,EAAE,KAAKZ,aALpB;AAMA,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWW,KANlB;AAOA,QAAA,MAAM,EAAE,KAAKX,KAAL,CAAWf,MAPnB;AAQA,QAAA,QAAQ,EAAE,KAAKe,KAAL,CAAWd,QARrB;AASA,QAAA,uBAAuB,EAAE,KAAKc,KAAL,CAAWT,uBATpC;AAUA,QAAA,mBAAmB,EAAE,KAAKS,KAAL,CAAWY;AAVhC;AAAA;AAAA;AAAA;AAAA,cAFO;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAgBF;;AAjCwC;;AAqC7C,MAAMC,eAAe,GAAGC,KAAD,IAAS;AAC5B,SAAM;AACFH,IAAAA,KAAK,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,KADrB;AAEFT,IAAAA,QAAQ,EAAEY,KAAK,CAACC,SAAN,CAAgBb,QAFxB;AAGFO,IAAAA,eAAe,EAAEK,KAAK,CAACC,SAAN,CAAgBN,eAH/B;AAIFC,IAAAA,WAAW,EAAEI,KAAK,CAACC,SAAN,CAAgBL,WAJ3B;AAKFF,IAAAA,UAAU,EAAEM,KAAK,CAACC,SAAN,CAAgBP,UAL1B;AAKqCI,IAAAA,mBAAmB,EAAEE,KAAK,CAACC,SAAN,CAAgBH;AAL1E,GAAN;AAOH,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAe5B,OAAO,CAAC6B,eAAD,EAClB;AACA5B,EAAAA,MADA;AAEAC,EAAAA,QAFA;AAGAC,EAAAA,QAHA;AAIAC,EAAAA,cAJA;AAKAC,EAAAA,kBALA;AAMAC,EAAAA,gBANA;AAOAC,EAAAA;AAPA,CADkB,CAAP,CAUVK,cAVU,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {follow, unfollow, setUsers, setCurrentPage, setUsersTotalCount, toggleIsFetching, toggleFollowingProgress} from './../../redux/usersRedecer';\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"./../common/preloader/preloader\";\r\nimport {usersAPI} from './../../api/api'\r\n\r\nclass UsersContainer extends React.Component {    \r\n    \r\n    componentDidMount(){\r\n    \r\n    }\r\n    onPageChanged = (pageNumber) =>{\r\n        this.props.toggleIsFetching (true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n        .then(data => {\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setUsers(data.items);\r\n            })\r\n    }\r\n    \r\n    \r\n    render(){\r\n       return <div>\r\n           {this.props.isFetching ? <Preloader /> : null}\r\n       <Users \r\n       \r\n       totalUsersCount={this.props.totalUsersCount} \r\n       pageSize={this.props.pageSize} \r\n       currentPage={this.props.currentPage}\r\n       onPageChanged={this.onPageChanged}\r\n       users={this.props.users}\r\n       follow={this.props.follow}\r\n       unfollow={this.props.unfollow}\r\n       toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n       followingInProgress={this.props.followingInProgress}\r\n       /> \r\n       </div>\r\n       \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps =(dispatch)=>{\r\n//     return{\r\n//         followUsers: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unFollowUsers: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (userId) => {\r\n//             dispatch(setUsersAC(userId))\r\n//         },\r\n//         selectedPageActive: (pageNumber) =>{\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) =>{\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching:(isFetching) =>{\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    { \r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setUsersTotalCount,\r\n    toggleIsFetching,\r\n    toggleFollowingProgress\r\n    })\r\n    (UsersContainer);"]},"metadata":{},"sourceType":"module"}