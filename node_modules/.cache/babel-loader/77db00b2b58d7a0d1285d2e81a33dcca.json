{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport * as axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { getProfileUser, updateStatus, getStatus, savePhoto, saveProfile } from \"../../redux/profileReducer\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { usersAPI } from \"./../../api/api\";\nimport { withAuthRedirect } from \"./../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n    }\n\n    this.props.getProfileUser(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      isOwner: !this.props.match.params.userId,\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      savePhoto: this.props.savePhoto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.id,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, {\n  getProfileUser,\n  getStatus,\n  saveProfile,\n  updateStatus,\n  savePhoto\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","axios","connect","getProfileUser","updateStatus","getStatus","savePhoto","saveProfile","Redirect","withRouter","usersAPI","withAuthRedirect","compose","ProfileContainer","Component","refreshProfile","userId","props","match","params","authorizedUserId","componentDidMount","componentDidUpdate","prevProps","prevState","render","profile","status","mapStateToProps","state","profilePage","auth","id","isAuth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,WALF,QAMO,4BANP;AAOA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,gBAAN,SAA+Bd,KAAK,CAACe,SAArC,CAA+C;AAC7CC,EAAAA,cAAc,GAAG;AACf,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;AACD;;AACD,SAAKH,KAAL,CAAWd,cAAX,CAA0Ba,MAA1B;AACA,SAAKC,KAAL,CAAWZ,SAAX,CAAqBW,MAArB;AACD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,cAAL;AACD;;AAEDO,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAI,KAAKP,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,IAAkCO,SAAS,CAACL,KAAV,CAAgBC,MAAhB,CAAuBH,MAA7D,EAAqE;AACnE,WAAKD,cAAL;AACD;AACF;;AAEDU,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,OAAD,OACM,KAAKR,KADX;AAEE,MAAA,OAAO,EAAG,CAAC,KAAKA,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAFrC;AAGE,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWS,OAHtB;AAIE,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,MAJrB;AAKE,MAAA,YAAY,EAAE,KAAKV,KAAL,CAAWb,YAL3B;AAME,MAAA,SAAS,EAAE,KAAKa,KAAL,CAAWX;AANxB;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA/B4C;;AAkC/C,IAAIsB,eAAe,GAAIC,KAAD,KAAY;AAChCH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADK;AAEhCC,EAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFM;AAGhCP,EAAAA,gBAAgB,EAAES,KAAK,CAACE,IAAN,CAAWC,EAHG;AAIhCC,EAAAA,MAAM,EAAEJ,KAAK,CAACE,IAAN,CAAWE;AAJa,CAAZ,CAAtB;;AAOA,eAAerB,OAAO,CACpBD,gBADoB,EAEpBT,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA,cAAF;AAAkBE,EAAAA,SAAlB;AAA6BE,EAAAA,WAA7B;AAA0CH,EAAAA,YAA1C;AAAwDE,EAAAA;AAAxD,CAAlB,CAFa,EAGpBG,UAHoB,CAAP,CAIbI,gBAJa,CAAf","sourcesContent":["import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getProfileUser,\r\n  updateStatus,\r\n  getStatus,\r\n  savePhoto,\r\n  saveProfile\r\n} from \"../../redux/profileReducer\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { usersAPI } from \"./../../api/api\";\r\nimport { withAuthRedirect } from \"./../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getProfileUser(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner ={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, { getProfileUser, getStatus, saveProfile, updateStatus, savePhoto }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"]},"metadata":{},"sourceType":"module"}