{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nlet store = {\n  _state: {\n    profilePage: {\n      postData: [{\n        message: \"hi\",\n        id: 1,\n        likes: \"15\"\n      }, {\n        message: \"how is your name\",\n        id: 1,\n        likes: \"15\"\n      }, {\n        message: \"what are you doing\",\n        id: 1,\n        likes: \"15\"\n      }],\n      newPostText: \"Вот этот тексfт\"\n    },\n    dialogsPage: {\n      dialogsData: [{\n        id: 1,\n        name: \"Eugene\"\n      }, {\n        id: 2,\n        name: \"Sasha\"\n      }, {\n        id: 3,\n        name: \"Igor\"\n      }, {\n        id: 4,\n        name: \"lex\"\n      }, {\n        id: 5,\n        name: \"Ilya\"\n      }],\n      messageData: [{\n        say: \"hi\",\n        id: 1\n      }, {\n        say: \"how is your name\",\n        id: 2\n      }, {\n        say: \"what are you doing\",\n        id: 3\n      }, {\n        say: \"how old are you\",\n        id: 4\n      }],\n      messageSend: 'fre'\n    },\n    friendsPage: {\n      friendsData: [{\n        id: 1,\n        name: \"Mars\"\n      }, {\n        id: 1,\n        name: \"Mercury\"\n      }, {\n        id: 1,\n        name: \"Jupiter\"\n      }]\n    }\n  },\n\n  _callSubscriber() {\n    console.log(\"dwd\");\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    // {type: 'ADD-POST' AND OTHER  }   \n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likes: 0\n      };\n\n      this._state.profilePage.postData.push(newPost);\n\n      this._state.profilePage.newPostText = \"\";\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'ADD-MESSAGE') {\n      let newMessage = {\n        id: 4,\n        say: this._state.dialogsPage.messageSend\n      };\n\n      this._state.dialogsPage.messageData.push(newMessage);\n\n      this._state.dialogsPage.messageSend = \"\";\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-MESSAGE-TEXT') this._state.dialogsPage.messageSend = action.newMessageText;\n  }\n\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostTextActionCreator = newPostText => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: newPostText\n  };\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/redux/state.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","store","_state","profilePage","postData","message","id","likes","newPostText","dialogsPage","dialogsData","name","messageData","say","messageSend","friendsPage","friendsData","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","newPost","push","newText","newMessage","newMessageText","addPostActionCreator","updateNewPostTextActionCreator","window"],"mappings":"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","sourcesContent":["const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet store = {\r\n  _state: {\r\n    profilePage: {\r\n      postData: [\r\n        { message: \"hi\", id: 1, likes: \"15\" },\r\n        { message: \"how is your name\", id: 1, likes: \"15\" },\r\n        { message: \"what are you doing\", id: 1, likes: \"15\" },\r\n      ],\r\n      newPostText: \"Вот этот тексfт\",\r\n    },\r\n\r\n    dialogsPage: {\r\n      dialogsData: [\r\n        { id: 1, name: \"Eugene\" },\r\n        { id: 2, name: \"Sasha\" },\r\n        { id: 3, name: \"Igor\" },\r\n        { id: 4, name: \"lex\" },\r\n        { id: 5, name: \"Ilya\" },\r\n      ],\r\n      messageData: [\r\n        { say: \"hi\", id: 1 },\r\n        { say: \"how is your name\", id: 2 },\r\n        { say: \"what are you doing\", id: 3 },\r\n        { say: \"how old are you\", id: 4 },\r\n      ],\r\n      messageSend:'fre'\r\n    },\r\n\r\n    friendsPage: {\r\n      friendsData: [\r\n        { id: 1, name: \"Mars\" },\r\n        { id: 1, name: \"Mercury\" },\r\n        { id: 1, name: \"Jupiter\" },\r\n      ],\r\n    },\r\n  },\r\n  _callSubscriber() {\r\n    console.log(\"dwd\");\r\n  },\r\n  getState() {\r\n    return this._state;\r\n  },\r\n  subscribe(observer) {\r\n    this._callSubscriber = observer;\r\n  },\r\n  \r\n  dispatch(action) {\r\n    // {type: 'ADD-POST' AND OTHER  }   \r\n    if (action.type === ADD_POST) {\r\n      let newPost = {\r\n        id: 5,\r\n        message: this._state.profilePage.newPostText,\r\n        likes: 0,\r\n      };\r\n      this._state.profilePage.postData.push(newPost);\r\n      this._state.profilePage.newPostText = \"\";\r\n      this._callSubscriber(this._state);\r\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n\r\n      this._state.profilePage.newPostText = action.newText;\r\n      this._callSubscriber(this._state);\r\n      \r\n    } else if (action.type === 'ADD-MESSAGE'){\r\n      let newMessage = {\r\n        id: 4,\r\n        say:this._state.dialogsPage.messageSend\r\n      }\r\n        this._state.dialogsPage.messageData.push(newMessage);\r\n        this._state.dialogsPage.messageSend = \"\";\r\n        this._callSubscriber(this._state);\r\n    } else if (action.type === 'UPDATE-NEW-MESSAGE-TEXT')\r\n      this._state.dialogsPage.messageSend = action.newMessageText\r\n  },\r\n};\r\n\r\nexport const addPostActionCreator = () =>{\r\n  return {\r\n    type: ADD_POST\r\n  }    \r\n}\r\nexport const updateNewPostTextActionCreator = (newPostText) =>{\r\n  return {\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: newPostText\r\n  }    \r\n}\r\n\r\nexport default store;\r\n\r\nwindow.store = store;\r\n"]},"metadata":{},"sourceType":"module"}