{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport s from \"./Dialogs.module.css\";\nimport Message from \"./Message/Message\";\nimport { addMessageActionCreator, updateMessageActionCreator } from \"../../redux/dialogsReducer\";\n\nconst Dialogs = props => {\n  debugger;\n  /*We are doing here map*/\n\n  let dialogsElement = props.dialogsData.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: dialog.name,\n    id: dialog.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this));\n  let messageElements = props.messageData.map(messageEl => /*#__PURE__*/_jsxDEV(Message, {\n    message: messageEl.say,\n    id: messageEl.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this));\n  let newMessagePost = /*#__PURE__*/React.createRef();\n\n  let onUpdateNewMessageText = () => {\n    let nextMessageSend = newMessagePost.current.value;\n    props.updateNewMessageText(nextMessageSend);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogs_item,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Dialogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), dialogsElement]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.messages_item,\n        children: messageElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.message__wrapper,\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: newMessagePost,\n          className: s.text,\n          onChange: onUpdateNewMessageText,\n          value: props.nextMessageSend,\n          placeholder: \"send message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.wrapper__btn,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onAddMessagePost(),\n          className: s.btn,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/Dialogs/Dialogs.jsx"],"names":["React","DialogItem","s","Message","addMessageActionCreator","updateMessageActionCreator","Dialogs","props","dialogsElement","dialogsData","map","dialog","name","id","messageElements","messageData","messageEl","say","newMessagePost","createRef","onUpdateNewMessageText","nextMessageSend","current","value","updateNewMessageText","dialogs","dialogs_item","messages","messages_item","message__wrapper","text","wrapper__btn","onAddMessagePost","btn"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,uBAAT,EAAkCC,0BAAlC,QAAmE,4BAAnE;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzB;AACE;;AACF,MAAIC,cAAc,GAAGD,KAAK,CAACE,WAAN,CAAkBC,GAAlB,CAAuBC,MAAD,iBACzC,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+B,IAAA,EAAE,EAAED,MAAM,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AAIA,MAAIC,eAAe,GAAGP,KAAK,CAACQ,WAAN,CAAkBL,GAAlB,CAAuBM,SAAD,iBAC1C,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,SAAS,CAACC,GAA5B;AAAiC,IAAA,EAAE,EAAED,SAAS,CAACH;AAA/C;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAIA,MAAIK,cAAc,gBAAGlB,KAAK,CAACmB,SAAN,EAArB;;AAIA,MAAIC,sBAAsB,GAAG,MAAI;AAC/B,QAAIC,eAAe,GAAGH,cAAc,CAACI,OAAf,CAAuBC,KAA7C;AACAhB,IAAAA,KAAK,CAACiB,oBAAN,CAA2BH,eAA3B;AACD,GAHD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEnB,CAAC,CAACuB,OAAlB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEvB,CAAC,CAACwB,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGlB,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAEN,CAAC,CAACyB,QAAlB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEzB,CAAC,CAAC0B,aAAlB;AAAA,kBACCd;AADD;AAAA;AAAA;AAAA;AAAA,cADJ,eAIE;AAAK,QAAA,SAAS,EAAEZ,CAAC,CAAC2B,gBAAlB;AAAA,+BACE;AAAU,UAAA,GAAG,EAAEX,cAAf;AACU,UAAA,SAAS,EAAEhB,CAAC,CAAC4B,IADvB;AAEU,UAAA,QAAQ,EAAEV,sBAFpB;AAGU,UAAA,KAAK,EAAEb,KAAK,CAACc,eAHvB;AAIU,UAAA,WAAW,EAAC;AAJtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAYE;AAAK,QAAA,SAAS,EAAEnB,CAAC,CAAC6B,YAAlB;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAGxB,KAAK,CAACyB,gBAAN,EAAlB;AAA6C,UAAA,SAAS,EAAE9B,CAAC,CAAC+B,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA9CD;;KAAM3B,O;AA+CN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport { addMessageActionCreator, updateMessageActionCreator} from \"../../redux/dialogsReducer\"\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  debugger;\r\n    /*We are doing here map*/\r\n  let dialogsElement = props.dialogsData.map((dialog) => (\r\n    <DialogItem name={dialog.name} id={dialog.id} />\r\n  ));\r\n\r\n  let messageElements = props.messageData.map((messageEl) => (\r\n    <Message message={messageEl.say} id={messageEl.id} />\r\n  ));\r\n\r\n  let newMessagePost = React.createRef();\r\n\r\n  \r\n\r\n  let onUpdateNewMessageText = ()=>{\r\n    let nextMessageSend = newMessagePost.current.value;\r\n    props.updateNewMessageText(nextMessageSend)    \r\n  }\r\n\r\n  \r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs_item}>\r\n        <h1> Dialogs</h1>\r\n        {dialogsElement}\r\n      </div>\r\n      <div className={s.messages}>\r\n          <div className={s.messages_item}>\r\n          {messageElements}\r\n          </div>   \r\n        <div className={s.message__wrapper}>\r\n          <textarea ref={newMessagePost}\r\n                    className={s.text}\r\n                    onChange={onUpdateNewMessageText}\r\n                    value={props.nextMessageSend}\r\n                    placeholder='send message'\r\n           ></textarea>           \r\n        </div>        \r\n        <div className={s.wrapper__btn}>\r\n          <button onClick={ props.onAddMessagePost() } className={s.btn}>send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n"]},"metadata":{},"sourceType":"module"}