{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setUsers, setCurrentPage, setUsersTotalCount, toggleIsFetching } from './../../redux/usersRedecer';\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"./../common/preloader/preloader\";\nimport { getUsers } from './../../api/api';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`, {\n        withCredentials: true\n      });\n      getUsers(this.props.currentPage, this.props.pageSize).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    getUsers(this.props.currentPage, this.props.pageSize).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setUsersTotalCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n}; // const mapDispatchToProps =(dispatch)=>{\n//     return{\n//         followUsers: (userId) => {\n//             dispatch(followAC(userId))\n//         },\n//         unFollowUsers: (userId) => {\n//             dispatch(unfollowAC(userId))\n//         },\n//         setUsers: (userId) => {\n//             dispatch(setUsersAC(userId))\n//         },\n//         selectedPageActive: (pageNumber) =>{\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalUsersCount: (totalCount) =>{\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         toggleIsFetching:(isFetching) =>{\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setUsersTotalCount,\n  toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","unfollow","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching","axios","Users","Preloader","getUsers","UsersContainer","Component","onPageChanged","pageNumber","props","get","pageSize","withCredentials","currentPage","then","response","data","items","componentDidMount","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {follow, unfollow, setUsers, setCurrentPage, setUsersTotalCount, toggleIsFetching} from './../../redux/usersRedecer';\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"./../common/preloader/preloader\";\r\nimport {getUsers} from './../../api/api'\r\n\r\nclass UsersContainer extends React.Component {    \r\n    \r\n    componentDidMount(){\r\n        this.props.toggleIsFetching (true);\r\n\r\n        getUsers(this.props.currentPage, this.props.pageSize).then(response => {\r\n        this.props.toggleIsFetching(false)\r\n        this.props.setUsers(response.data.items);\r\n        this.props.setUsersTotalCount(response.data.totalCount)\r\n            });  \r\n    }\r\n    onPageChanged = (pageNumber) =>{\r\n        this.props.toggleIsFetching (true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,{            \r\n            withCredentials: true\r\n        })\r\n        getUsers(this.props.currentPage, this.props.pageSize)\r\n        .then(response => {\r\n             \r\n        this.props.toggleIsFetching(false)\r\n        this.props.setUsers(response.data.items);\r\n            })\r\n    }\r\n    \r\n    \r\n    render(){\r\n       return <div>\r\n           {this.props.isFetching ? <Preloader /> : null}\r\n       <Users \r\n       \r\n       totalUsersCount={this.props.totalUsersCount} \r\n       pageSize={this.props.pageSize} \r\n       currentPage={this.props.currentPage}\r\n       onPageChanged={this.onPageChanged}\r\n       users={this.props.users}\r\n       follow={this.props.follow}\r\n       unfollow={this.props.unfollow}\r\n       /> \r\n       </div>\r\n       \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps =(dispatch)=>{\r\n//     return{\r\n//         followUsers: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unFollowUsers: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (userId) => {\r\n//             dispatch(setUsersAC(userId))\r\n//         },\r\n//         selectedPageActive: (pageNumber) =>{\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) =>{\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching:(isFetching) =>{\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    { \r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setUsersTotalCount,\r\n    toggleIsFetching\r\n    })\r\n    (UsersContainer);"]},"metadata":{},"sourceType":"module"}