{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SETUSERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [2, 3]\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.count\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return { ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n        };\n      }\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport const follow = userId => {\n  return {\n    type: FOLLOW,\n    userId\n  };\n};\nexport const unfollow = userId => {\n  return {\n    type: UNFOLLOW,\n    userId\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: SET_USERS,\n    users\n  };\n};\nexport const setCurrentPage = currentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage\n  };\n};\nexport const setUsersTotalCount = totalUsersCount => {\n  return {\n    type: SET_TOTAL_USERS_COUNT,\n    count: totalUsersCount\n  };\n};\nexport const toggleIsFetching = isFetching => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching\n  };\n};\nexport const toggleFollowingProgress = (isFetching, userId) => {\n  return {\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/redux/usersRedecer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","count","filter","follow","unfollow","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching","toggleFollowingProgress"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,UAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,kBAAkB,GAAC,oBAAzB;AACA,MAAMC,4BAA4B,GAAC,8BAAnC;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAC,EADS;AAEfC,EAAAA,QAAQ,EAAE,CAFK;AAGfC,EAAAA,eAAe,EAAE,CAHF;AAIfC,EAAAA,WAAW,EAAE,CAJE;AAKfC,EAAAA,UAAU,EAAE,IALG;AAMfC,EAAAA,mBAAmB,EAAE,CAAC,CAAD,EAAI,CAAJ;AANN,CAAnB;;AASA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAEnD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKjB,MAAL;AAEI,aAAO,EACH,GAAGe,KADA;AAEHP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAkBC,CAAD,IAAO;AAC3B,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA2B;AACvB,mBAAM,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAN;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AAUJ,SAAKlB,QAAL;AAEI,aAAO,EACH,GAAGc,KADA;AAEHP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAkBC,CAAD,IAAO;AAC3B,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA2B;AACvB,mBAAM,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAN;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AAUJ,SAAKjB,SAAL;AAAe;AACX,eAAM,EAAC,GAAGa,KAAJ;AAAWP,UAAAA,KAAK,EAAEQ,MAAM,CAACR;AAAzB,SAAN;AACC;;AACL,SAAKL,gBAAL;AAAsB;AAClB,eAAM,EAAC,GAAGY,KAAJ;AAAWJ,UAAAA,WAAW,EAAEK,MAAM,CAACL;AAA/B,SAAN;AACH;;AACD,SAAKP,qBAAL;AAA2B;AACvB,eAAM,EAAC,GAAGW,KAAJ;AAAWL,UAAAA,eAAe,EAAEM,MAAM,CAACO;AAAnC,SAAN;AACH;;AACD,SAAKlB,kBAAL;AAAwB;AACpB,eAAM,EAAC,GAAGU,KAAJ;AAAWH,UAAAA,UAAU,EAAEI,MAAM,CAACJ;AAA9B,SAAN;AACH;;AACD,SAAKN,4BAAL;AAAkC;AAC9B,eAAM,EAAC,GAAGS,KAAJ;AACFF,UAAAA,mBAAmB,EAAEG,MAAM,CAACJ,UAAP,GAAoB,CAAC,GAAGG,KAAK,CAACF,mBAAV,EAA+BG,MAAM,CAACK,MAAtC,CAApB,GACrBN,KAAK,CAACF,mBAAN,CAA0BW,MAA1B,CAAiCJ,EAAE,IAAEA,EAAE,IAAIJ,MAAM,CAACK,MAAlD;AAFE,SAAN;AAIH;;AAED;AACI,aAAON,KAAP;AA9CR;;AA+CC;AACJ,CAlDD;;AAqDA,OAAO,MAAMU,MAAM,GAAIJ,MAAD,IAAY;AAC9B,SAAO;AACHJ,IAAAA,IAAI,EAAEjB,MADH;AAEHqB,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAMK,QAAQ,GAAIL,MAAD,IAAY;AAChC,SAAO;AACHJ,IAAAA,IAAI,EAAEhB,QADH;AAEHoB,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAMM,QAAQ,GAAInB,KAAD,IAAW;AAC/B,SAAO;AACHS,IAAAA,IAAI,EAAEf,SADH;AAEHM,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAMoB,cAAc,GAAIjB,WAAD,IAAiB;AAC3C,SAAO;AACHM,IAAAA,IAAI,EAAEd,gBADH;AAEHQ,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAMkB,kBAAkB,GAAInB,eAAD,IAAqB;AACnD,SAAO;AACHO,IAAAA,IAAI,EAAEb,qBADH;AAEHmB,IAAAA,KAAK,EAAEb;AAFJ,GAAP;AAIH,CALM;AASP,OAAO,MAAMoB,gBAAgB,GAAIlB,UAAD,IAAgB;AAC5C,SAAO;AACHK,IAAAA,IAAI,EAAEZ,kBADH;AAEHO,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAMmB,uBAAuB,GAAG,CAACnB,UAAD,EAAYS,MAAZ,KAAuB;AAC1D,SAAO;AACHJ,IAAAA,IAAI,EAAEX,4BADH;AAEHM,IAAAA;AAFG,GAAP;AAIH,CALM;AAQP,eAAeE,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SETUSERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING='TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS='TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n \r\nlet initialState = {\r\n    users:[ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [2, 3]\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n\r\n            return {\r\n                ...state,\r\n                users: state.users.map( (u) => {\r\n                    if (u.id === action.userId){\r\n                        return{...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n\r\n            return {\r\n                ...state,\r\n                users: state.users.map( (u) => {\r\n                    if (u.id === action.userId){\r\n                        return{...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case SET_USERS:{\r\n            return{...state, users: action.users}     \r\n            }\r\n        case SET_CURRENT_PAGE:{\r\n            return{...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT:{\r\n            return{...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING:{\r\n            return{...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:{\r\n            return{...state,\r\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] :\r\n                state.followingInProgress.filter(id=>id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\n\r\nexport const follow = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n}\r\nexport const setUsersTotalCount = (totalUsersCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        count: totalUsersCount\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\nexport const toggleFollowingProgress = (isFetching,userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}