{"ast":null,"code":"import { usersAPI } from \"./../api/api\";\nimport { profileAPI } from \"./../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  postData: [{\n    message: \"hi\",\n    id: 1,\n    likes: \"15\"\n  }, {\n    message: \"how is your name\",\n    id: 2,\n    likes: \"15\"\n  }, {\n    message: \"what are you doing\",\n    id: 3,\n    likes: \"15\"\n  }],\n  newPostText: \"\",\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 5,\n        message: state.newPostText,\n        likes: 0\n      };\n      return { ...state,\n        postData: [...state.postData, newPost],\n        newPostText: \"\"\n      };\n\n    case UPDATE_NEW_POST_TEXT:\n      return { ...state,\n        newPostText: action.newText\n      };\n\n    case SET_USER_PROFILE:\n      return { ...state,\n        profile: action.profile\n      };\n\n    case SET_STATUS:\n      return { ...state,\n        status: action.status\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const setStatus = status => {\n  return {\n    type: SET_STATUS,\n    status: status\n  };\n};\nexport const setUserProfile = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile\n  };\n};\nexport const updateNewPostTextActionCreator = newPostText => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: newPostText\n  };\n};\nexport const getProfileUser = userId => {\n  return dispatch => {\n    usersAPI.getProfile(userId).then(response => {\n      dispatch(setUserProfile(response.data));\n    });\n  };\n};\nexport const updateStatus = status => {\n  return dispatch => {\n    profileAPI.getStatus(userId).then(response => {\n      debugger;\n      dispatch(setStatus(response.data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/redux/profileReducer.js"],"names":["usersAPI","profileAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","initialState","postData","message","id","likes","newPostText","profile","status","profileReducer","state","action","type","newPost","newText","addPostActionCreator","setStatus","setUserProfile","updateNewPostTextActionCreator","getProfileUser","userId","dispatch","getProfile","then","response","data","updateStatus","getStatus"],"mappings":"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","sourcesContent":["import {usersAPI} from \"./../api/api\";\r\nimport {profileAPI} from \"./../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n  postData: [\r\n    { message: \"hi\", id: 1, likes: \"15\" },\r\n    { message: \"how is your name\", id: 2, likes: \"15\" },\r\n    { message: \"what are you doing\", id: 3, likes: \"15\" },\r\n  ],\r\n  newPostText: \"\",\r\n  profile: null,\r\n  status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let newPost = {\r\n        id: 5,\r\n        message: state.newPostText,\r\n        likes: 0\r\n      };\r\n      return {\r\n        ...state,\r\n        postData: [...state.postData, newPost],\r\n        newPostText: \"\"\r\n      }\r\n\r\n    case UPDATE_NEW_POST_TEXT:\r\n      return {\r\n        ...state,\r\n        newPostText: action.newText\r\n      }\r\n    case SET_USER_PROFILE:\r\n      return{\r\n        ...state, profile: action.profile\r\n      }\r\n    case SET_STATUS:\r\n      return{\r\n        ...state, status: action.status\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  };\r\n}\r\n\r\n\r\nexport const addPostActionCreator = () => {\r\n  return {\r\n    type: ADD_POST\r\n  }\r\n}\r\nexport const setStatus = (status) => {\r\n  return {\r\n    type: SET_STATUS,\r\n    status: status\r\n  }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n  return {\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n  }\r\n}\r\n\r\nexport const updateNewPostTextActionCreator = (newPostText) => {\r\n  return {\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: newPostText\r\n  }\r\n}\r\n\r\nexport const getProfileUser = (userId) =>{\r\n  return (dispatch) => {\r\n      usersAPI.getProfile(userId).then(response => {\r\n          dispatch(setUserProfile(response.data));\r\n        }); \r\n  }\r\n}\r\nexport const updateStatus = (status) =>{\r\n  return (dispatch) => {\r\n    profileAPI.getStatus(userId).then(response => {\r\n          debugger;\r\n          dispatch(setStatus(response.data));\r\n        }); \r\n  }\r\n}\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}