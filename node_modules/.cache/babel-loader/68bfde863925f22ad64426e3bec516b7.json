{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\common\\\\paginator\\\\Paginator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport s from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nconst Paginator = ({\n  currentPage,\n  onPageChanged,\n  totalItemCount,\n  pageSize,\n  portionSize = 10\n}) => {\n  _s();\n\n  let pagesCount = Math.ceil(totalItemCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.paginator,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.btn_paginator,\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cn({\n          [s.selectedPage]: currentPage === p\n        }, s.selectedPage),\n        onClick: e => {\n          onPageChanged(p);\n        },\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this);\n    }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/common/paginator/Paginator.jsx"],"names":["React","useState","s","cn","Paginator","currentPage","onPageChanged","totalItemCount","pageSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","btn_paginator","filter","p","map","selectedPage","e"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,WADiB;AAEjBC,EAAAA,aAFiB;AAGjBC,EAAAA,cAHiB;AAIjBC,EAAAA,QAJiB;AAKjBC,EAAAA,WAAW,GAAG;AALG,CAAD,KAMZ;AAAA;;AACJ,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUL,cAAc,GAAGC,QAA3B,CAAjB;AAEA,MAAIK,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AACpCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACD;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,MAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIkB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEP,CAAC,CAACmB,SAAlB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,aAAa,GAAG,CAAhB,iBACC;AAAQ,MAAA,SAAS,EAAEf,CAAC,CAACoB,aAArB;AACE,MAAA,OAAO,EAAE,MAAM;AACbJ,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAoC,OAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAWGJ,KAAK,CACHU,MADF,CAEIC,CAAD,IAAOA,CAAC,IAAIL,qBAAL,IAA8BK,CAAC,IAAGJ,sBAF5C,EAIEK,GAJF,CAIOD,CAAD,IAAO;AACV,0BACE;AACE,QAAA,SAAS,EAAErB,EAAE,CACX;AAAE,WAACD,CAAC,CAACwB,YAAH,GAAkBrB,WAAW,KAAKmB;AAApC,SADW,EAEXtB,CAAC,CAACwB,YAFS,CADf;AAME,QAAA,OAAO,EAAGC,CAAD,IAAO;AACdrB,UAAAA,aAAa,CAACkB,CAAD,CAAb;AACD,SARH;AAAA,kBAUGA;AAVH,SAKOA,CALP;AAAA;AAAA;AAAA;AAAA,cADF;AAcD,KAnBF,CAXH,EA+BKR,YAAY,GAAGC,aAAf,iBACD;AACE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,YAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA9DD;;GAAMb,S;;KAAAA,S;AAgEN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\"\r\n\r\nconst Paginator = ({\r\n  currentPage,\r\n  onPageChanged,\r\n  totalItemCount,\r\n  pageSize,\r\n  portionSize = 10,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={s.paginator}>\r\n      <h1>Users</h1>\r\n      {portionNumber > 1 && \r\n        <button className={s.btn_paginator}\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1)}}\r\n        >\r\n          Prev\r\n        </button>\r\n      }\r\n\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p<= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <button\r\n              className={cn(\r\n                { [s.selectedPage]: currentPage === p },\r\n                s.selectedPage\r\n              )}\r\n              key={p}\r\n              onClick={(e) => {\r\n                onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </button>\r\n          );\r\n        })}\r\n        {portionCount > portionNumber && \r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          \r\n        </button>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n"]},"metadata":{},"sourceType":"module"}