{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\Header\\\\HeaderContainer.jsx\";\nimport React from 'react';\nimport Header from './Header';\nimport { getAuthUserData, logout } from './../../redux/auth-reducer';\nimport { connect } from 'react-redux';\n\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    this.props.getAuthUserData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Header, { ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {\n  getAuthUserData,\n  logout\n})(HeaderContainer);","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/Header/HeaderContainer.jsx"],"names":["React","Header","getAuthUserData","logout","connect","HeaderContainer","Component","componentDidMount","props","render","mapStateToProps","state","isAuth","auth","login"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,eAAT,EAA0BC,MAA1B,QAAuC,4BAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA6C;AAE3CC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWN,eAAX;AACD;;AACDO,EAAAA,MAAM,GAAE;AACN,wBAAO,QAAC,MAAD,OAAY,KAAKD;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAP0C;;AAQ5C;;AAED,MAAME,eAAe,GAAIC,KAAD,KAAW;AACjCC,EAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD,MADc;AAEjCE,EAAAA,KAAK,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAFe,CAAX,CAAxB;;AAKA,eAAeV,OAAO,CAACM,eAAD,EAAkB;AAACR,EAAAA,eAAD;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CAAmDE,eAAnD,CAAf","sourcesContent":["import React from 'react'\r\nimport Header from './Header';\r\nimport { getAuthUserData, logout} from './../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n  componentDidMount(){\r\n    this.props.getAuthUserData();\r\n  }\r\n  render(){\r\n    return <Header {...this.props} />;\r\n  }  \r\n};\r\n\r\nconst mapStateToProps = (state) =>({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData,logout})(HeaderContainer) ;\r\n"]},"metadata":{},"sourceType":"module"}