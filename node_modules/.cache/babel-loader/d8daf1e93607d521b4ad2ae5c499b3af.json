{"ast":null,"code":"import { authAPI } from \"../api/api\";\nimport { getAuthUserData } from \"./auth-reducer\";\nconst INITIALZED_SUCCESS = 'INITIALZED_SUCCESS';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport const initializedSuccess = () => {\n  return {\n    type: INITIALZED_SUCCESS\n  };\n};\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  debugger;\n  Promise.all[promise].then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/redux/app-reducer.js"],"names":["authAPI","getAuthUserData","INITIALZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAEjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,kBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;;AAQC;AACJ,CAXD;;AAcA,OAAO,MAAMG,kBAAkB,GAAG,MAAM;AACpC,SAAO;AACHD,IAAAA,IAAI,EAAEN;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMQ,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC7C,MAAIC,OAAO,GAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB;AACA;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqBG,IAArB,CAA0B,MAAM;AAC5BJ,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,GAFD;AAGH,CANM;AAQP,eAAeJ,UAAf","sourcesContent":["import { authAPI } from \"../api/api\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\nconst INITIALZED_SUCCESS = 'INITIALZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: INITIALZED_SUCCESS\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    debugger;\r\n    Promise.all[promise].then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}