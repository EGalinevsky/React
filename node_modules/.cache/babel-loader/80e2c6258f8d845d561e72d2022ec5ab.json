{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\login\\\\Login.jsx\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Input } from \"./../../components/common/FormsControls/FormsControls\";\nimport s from './../common/FormsControls/FormsControls.module.css';\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"./../../redux/auth-reducer\";\nimport { Redirect } from \"react-router\";\nlet maxLength = maxLengthCreator(30);\n\nconst LoginForm = ({\n  handleSubmit,\n  error\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [createField, /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: \"email\",\n        name: \"email\",\n        component: Input,\n        validate: [required, maxLength]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: \"password\",\n        name: \"password\",\n        component: Input,\n        validate: [required, maxLength]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"checkbox\",\n        name: \"rememberMe\",\n        component: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), \" \", \"remember me\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.form_summary_error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"sing in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: \"login\"\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Login;\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/login/Login.jsx"],"names":["React","Field","reduxForm","Input","s","maxLengthCreator","required","connect","login","Redirect","maxLength","LoginForm","handleSubmit","error","createField","form_summary_error","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","isAuth","mapStateToProps","state","auth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,KAAT,QAAsB,uDAAtB;AACA,OAAOC,CAAP,MAAc,oDAAd;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,mCAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAGA,IAAIC,SAAS,GAAGL,gBAAgB,CAAC,EAAD,CAAhC;;AAEA,MAAMM,SAAS,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AAC3C,sBACE;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA,4BACE;AAAA,iBACGE,WADH,eAEE,QAAC,KAAD;AACE,QAAA,WAAW,EAAE,OADf;AAEE,QAAA,IAAI,EAAE,OAFR;AAGE,QAAA,SAAS,EAAEX,KAHb;AAIE,QAAA,QAAQ,EAAE,CAACG,QAAD,EAAWI,SAAX;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,WAAW,EAAE,UADf;AAEE,QAAA,IAAI,EAAE,UAFR;AAGE,QAAA,SAAS,EAAEP,KAHb;AAIE,QAAA,QAAQ,EAAE,CAACG,QAAD,EAAWI,SAAX;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,eAkBE;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,UAAb;AAAyB,QAAA,IAAI,EAAE,YAA/B;AAA6C,QAAA,SAAS,EAAE;AAAxD;AAAA;AAAA;AAAA;AAAA,cADF,EACsE,GADtE;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,EAsBGG,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAET,CAAC,CAACW,kBAAlB;AAAA,gBACLF;AADK;AAAA;AAAA;AAAA;AAAA,YAtBZ,eAyBE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAhCD;;KAAMF,S;AAkCN,MAAMK,cAAc,GAAGd,SAAS,CAAC;AAC/Be,EAAAA,IAAI,EAAE;AADyB,CAAD,CAAT,CAEpBN,SAFoB,CAAvB;;AAIA,MAAMO,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7BF,IAAAA,KAAK,CAACX,KAAN,CAAYa,QAAQ,CAACC,KAArB,EAA4BD,QAAQ,CAACE,QAArC,EAA+CF,QAAQ,CAACG,UAAxD;AACD,GAFD;;AAIA,MAAIL,KAAK,CAACM,MAAV,EAAkB;AAChB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEL;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAfD;;MAAMF,K;;AAiBN,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADe,CAAZ,CAAxB;;AAIA,eAAelB,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAAoCU,KAApC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input } from \"./../../components/common/FormsControls/FormsControls\";\r\nimport s from './../common/FormsControls/FormsControls.module.css';\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"./../../redux/auth-reducer\";\r\nimport { Redirect } from \"react-router\";\r\n\r\n\r\nlet maxLength = maxLengthCreator(30);\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        {createField}\r\n        <Field\r\n          placeholder={\"email\"}\r\n          name={\"email\"}\r\n          component={Input}\r\n          validate={[required, maxLength]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          placeholder={\"password\"}\r\n          name={\"password\"}\r\n          component={Input}\r\n          validate={[required, maxLength]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"} />{\" \"}\r\n        remember me\r\n      </div>\r\n      {error && <div className={s.form_summary_error}>\r\n          {error}\r\n      </div>}\r\n      <div>\r\n        <button>sing in</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: \"login\",\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n"]},"metadata":{},"sourceType":"module"}