{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\hoc\\\\withAuthRedirect.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router\";\nimport { connect } from 'react-redux';\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 44\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  let mapStateToPropsForRedirect = state => ({\n    isAuth: state.auth.isAuth\n  });\n\n  let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedRedirectComponent;\n};","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/hoc/withAuthRedirect.js"],"names":["React","Redirect","connect","withAuthRedirect","Component","RedirectComponent","render","props","isAuth","mapStateToPropsForRedirect","state","auth","ConnectedRedirectComponent"],"mappings":";;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAc;AAC1C,QAAMC,iBAAN,SAAgCL,KAAK,CAACI,SAAtC,CAA+C;AAC3CE,IAAAA,MAAM,GAAE;AACJ,UAAI,CAAC,KAAKC,KAAL,CAAWC,MAAhB,EAAwB,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AAExB,0BAAO,QAAC,SAAD,OAAe,KAAKD;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAL0C;;AAQ/C,MAAIE,0BAA0B,GAAIC,KAAD,KAAW;AACxCF,IAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADqB,GAAX,CAAjC;;AAGA,MAAII,0BAA0B,GAAGV,OAAO,CAACO,0BAAD,CAAP,CAAoCJ,iBAApC,CAAjC;AACA,SAAOO,0BAAP;AACH,CAdM","sourcesContent":["import React  from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from 'react-redux';\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if (!this.props.isAuth) return <Redirect to ='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) =>({\r\n        isAuth: state.auth.isAuth  \r\n      })\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}"]},"metadata":{},"sourceType":"module"}