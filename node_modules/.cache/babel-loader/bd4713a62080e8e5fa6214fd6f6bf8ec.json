{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\common\\\\paginator\\\\Paginator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport s from \"./Paginator.module.css\";\n\nconst Paginator = ({\n  currentPage,\n  onPageChanged,\n  totalItemCount,\n  pageSize,\n  portionSize = 10\n}) => {\n  _s();\n\n  let pagesCount = Math.ceil(totalItemCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.paginator,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 30\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: currentPage === p ? s.selectedPageActive : s.selectedPage,\n        onClick: e => {\n          onPageChanged(p);\n        },\n        children: p\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/common/paginator/Paginator.jsx"],"names":["React","useState","s","Paginator","currentPage","onPageChanged","totalItemCount","pageSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPageActive","selectedPage","e"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,CAAP,MAAc,wBAAd;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,WADiB;AAEjBC,EAAAA,aAFiB;AAGjBC,EAAAA,cAHiB;AAIjBC,EAAAA,QAJiB;AAKjBC,EAAAA,WAAW,GAAG;AALG,CAAD,KAMZ;AAAA;;AACJ,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUL,cAAc,GAAGC,QAA3B,CAAjB;AAEA,MAAIK,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AACpCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACD;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,MAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIiB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEN,CAAC,CAACkB,SAAlB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEIJ,aAAa,GAAG,CAAhB,iBAAqB;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACC,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFzB,EAIGJ,KAAK,CAACS,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAIJ,qBAAL,IAA8BI,CAAC,IAAGH,sBAApD,EAA4EI,GAA5E,CAAiFD,CAAD,IAAO;AACtF,0BACE;AACE,QAAA,SAAS,EACPlB,WAAW,KAAKkB,CAAhB,GAAoBpB,CAAC,CAACsB,kBAAtB,GAA2CtB,CAAC,CAACuB,YAFjD;AAIE,QAAA,OAAO,EAAGC,CAAD,IAAO;AACdrB,UAAAA,aAAa,CAACiB,CAAD,CAAb;AACD,SANH;AAAA,kBAQGA;AARH;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAbA,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxCD;;GAAMnB,S;;KAAAA,S;AA0CN,eAAeA,SAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({\r\n  currentPage,\r\n  onPageChanged,\r\n  totalItemCount,\r\n  pageSize,\r\n  portionSize = 10,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={s.paginator}>\r\n      <h1>Users</h1>\r\n      { portionNumber > 1 && <button onClick={() => {setPortionNumber(portionNumber - 1 )}}>Prev</button>}\r\n      \r\n      {pages.filter(p => p >= leftPortionPageNumber && p<= rightPortionPageNumber).map((p) => {\r\n        return (\r\n          <button\r\n            className={\r\n              currentPage === p ? s.selectedPageActive : s.selectedPage\r\n            }\r\n            onClick={(e) => {\r\n              onPageChanged(p);\r\n            }}\r\n          >\r\n            {p}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n"]},"metadata":{},"sourceType":"module"}