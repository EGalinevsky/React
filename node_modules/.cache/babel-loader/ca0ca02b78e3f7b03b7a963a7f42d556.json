{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport s from \"./Dialogs.module.css\";\nimport Message from \"./Message/Message\";\nimport { addMessageActionCreator, updateMessageActionCreator } from \"../../redux/dialogsReducer\";\nimport { Redirect } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\n\nconst Dialogs = props => {\n  let state = props.dialogsPage;\n  /*We are doing here map*/\n\n  let dialogsElement = state.dialogsData.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: dialog.name,\n    id: dialog.id\n  }, dialog.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this));\n  let messageElements = state.messageData.map(messageEl => /*#__PURE__*/_jsxDEV(Message, {\n    message: messageEl.say,\n    id: messageEl.id\n  }, messageEl.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this));\n  let nextMessageAdd = state.nextMessageSend;\n\n  let onAddMessagePost = () => {\n    props.sendMessage();\n  };\n\n  let onUpdateNewMessageText = e => {\n    let nextMessageSend = e.target.value;\n    props.updateNewMessageSend(nextMessageSend);\n  };\n\n  let addNewMessage = values => {\n    alert(values.nextMessageBody);\n    props.sendMessage();\n  };\n\n  if (!props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogs_item,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Dialogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), dialogsElement]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.messages_item,\n        children: messageElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddMessageFormRedux, {\n        onSubmit: addNewMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dialogs;\n\nconst AddMessageForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.message__wrapper,\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: \"textarea\",\n        name: \"nextMessageBody\",\n        placeholder: \"send message\",\n        className: s.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.wrapper__btn,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.btn,\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = AddMessageForm;\nconst AddMessageFormRedux = reduxForm({\n  form: \"dialogAddMessageForm\"\n})(AddMessageForm);\nexport default Dialogs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dialogs\");\n$RefreshReg$(_c2, \"AddMessageForm\");","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/Dialogs/Dialogs.jsx"],"names":["React","DialogItem","s","Message","addMessageActionCreator","updateMessageActionCreator","Redirect","Field","reduxForm","Dialogs","props","state","dialogsPage","dialogsElement","dialogsData","map","dialog","name","id","messageElements","messageData","messageEl","say","nextMessageAdd","nextMessageSend","onAddMessagePost","sendMessage","onUpdateNewMessageText","e","target","value","updateNewMessageSend","addNewMessage","values","alert","nextMessageBody","isAuth","dialogs","dialogs_item","messages","messages_item","AddMessageForm","handleSubmit","message__wrapper","text","wrapper__btn","btn","AddMessageFormRedux","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport {\r\n  addMessageActionCreator,\r\n  updateMessageActionCreator,\r\n} from \"../../redux/dialogsReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  /*We are doing here map*/\r\n  let dialogsElement = state.dialogsData.map((dialog) => (\r\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n  ));\r\n\r\n  let messageElements = state.messageData.map((messageEl) => (\r\n    <Message message={messageEl.say} key={messageEl.id} id={messageEl.id} />\r\n  ));\r\n\r\n  let nextMessageAdd = state.nextMessageSend;\r\n\r\n  let onAddMessagePost = () => {\r\n    props.sendMessage();\r\n  };\r\n\r\n  let onUpdateNewMessageText = (e) => {\r\n    let nextMessageSend = e.target.value;\r\n    props.updateNewMessageSend(nextMessageSend);\r\n  };\r\n\r\n  let addNewMessage = (values) => {\r\n    alert(values.nextMessageBody)\r\n    props.sendMessage();\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs_item}>\r\n        <h1> Dialogs</h1>\r\n        {dialogsElement}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div className={s.messages_item}>{messageElements}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n \r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.message__wrapper}>\r\n        <Field\r\n          component=\"textarea\"\r\n          name=\"nextMessageBody\"\r\n          placeholder=\"send message\"\r\n          className={s.text}\r\n        ></Field>\r\n      </div>\r\n      <div className={s.wrapper__btn}>\r\n        <button className={s.btn}>\r\n          send\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\nexport default Dialogs;\r\n"]},"metadata":{},"sourceType":"module"}