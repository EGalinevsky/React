{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport * as axios from \"axios\";\nimport { connect } from 'react-redux';\nimport { getProfileUser, updateStatus, getStatus } from '../../redux/profileReducer';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { usersAPI } from './../../api/api';\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n    }\n\n    this.props.getProfileUser(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    debugger;\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.id,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, {\n  getProfileUser,\n  getStatus,\n  updateStatus\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","axios","connect","getProfileUser","updateStatus","getStatus","Redirect","withRouter","usersAPI","withAuthRedirect","compose","ProfileContainer","Component","componentDidMount","userId","props","match","params","authorizedUserId","componentDidUpdate","prevProps","prevState","render","profile","status","mapStateToProps","state","profilePage","auth","id","isAuth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,cAAR,EAAuBC,YAAvB,EAAoCC,SAApC,QAAoD,4BAApD;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,gBAAR,QAA+B,8BAA/B;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,gBAAN,SAA+BZ,KAAK,CAACa,SAArC,CAA+C;AAG7CC,EAAAA,iBAAiB,GAAE;AAEjB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;AACD;;AACD,SAAKH,KAAL,CAAWZ,cAAX,CAA0BW,MAA1B;AACA,SAAKC,KAAL,CAAWV,SAAX,CAAqBS,MAArB;AACD;;AAEDK,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB,CAEvC;;AAEDC,EAAAA,MAAM,GAAE;AACN;AACA,wBACE,QAAC,OAAD,OAAa,KAAKP,KAAlB;AACA,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWQ,OADpB;AAEA,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWS,MAFnB;AAE2B,MAAA,YAAY,EAAE,KAAKT,KAAL,CAAWX;AAFpD;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAxB4C;;AAyB9C;;AAED,IAAIqB,eAAe,GAAIC,KAAD,KAAW;AAC/BH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADI;AAE/BC,EAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFK;AAG/BN,EAAAA,gBAAgB,EAAEQ,KAAK,CAACE,IAAN,CAAWC,EAHE;AAI/BC,EAAAA,MAAM,EAAEJ,KAAK,CAACE,IAAN,CAAWE;AAJY,CAAX,CAAtB;;AAOA,eAAepB,OAAO,CAACD,gBAAD,EACpBP,OAAO,CAACuB,eAAD,EAAkB;AAACtB,EAAAA,cAAD;AAAiBE,EAAAA,SAAjB;AAA4BD,EAAAA;AAA5B,CAAlB,CADa,EAEpBG,UAFoB,CAAP,CAGbI,gBAHa,CAAf","sourcesContent":["import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport { connect } from 'react-redux';\r\nimport {getProfileUser,updateStatus,getStatus} from '../../redux/profileReducer';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport {usersAPI} from './../../api/api'\r\nimport {withAuthRedirect} from './../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  \r\n  \r\n  componentDidMount(){\r\n    \r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {   \r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getProfileUser(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n\r\n  }\r\n\r\n  render(){\r\n    debugger;\r\n    return (\r\n      <Profile {...this.props} \r\n      profile={this.props.profile} \r\n      status={this.props.status} updateStatus={this.props.updateStatus} />\r\n    );\r\n  }  \r\n};\r\n\r\nlet mapStateToProps = (state) =>({  \r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(withAuthRedirect,\r\n  connect(mapStateToProps, {getProfileUser, getStatus, updateStatus}),\r\n  withRouter,\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}