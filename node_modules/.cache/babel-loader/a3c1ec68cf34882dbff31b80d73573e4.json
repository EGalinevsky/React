{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\react\\\\first-project\\\\my-react\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport s from \"./Dialogs.module.css\";\nimport Message from \"./Message/Message\";\nimport { addMessageActionCreator, updateMessageActionCreator } from \"../../redux/dialogsReducer\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Dialogs = props => {\n  let state = props.dialogsPage;\n  /*We are doing here map*/\n\n  let dialogsElement = state.dialogsData.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: dialog.name,\n    id: dialog.id\n  }, dialog.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this));\n  let messageElements = state.messageData.map(messageEl => /*#__PURE__*/_jsxDEV(Message, {\n    message: messageEl.say,\n    id: messageEl.id\n  }, messageEl.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this));\n  let nextMessageAdd = state.nextMessageSend;\n\n  let onAddMessagePost = () => {\n    props.sendMessage();\n  };\n\n  let onUpdateNewMessageText = e => {\n    let nextMessageSend = e.target.value;\n    props.updateNewMessageSend(nextMessageSend);\n  };\n\n  if (!props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogs_item,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Dialogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), dialogsElement]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.messages_item,\n        children: messageElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.wrapper__btn,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onAddMessagePost,\n          className: s.btn,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["D:/IT/react/first-project/my-react/src/components/Dialogs/Dialogs.jsx"],"names":["React","DialogItem","s","Message","addMessageActionCreator","updateMessageActionCreator","Redirect","Dialogs","props","state","dialogsPage","dialogsElement","dialogsData","map","dialog","name","id","messageElements","messageData","messageEl","say","nextMessageAdd","nextMessageSend","onAddMessagePost","sendMessage","onUpdateNewMessageText","e","target","value","updateNewMessageSend","isAuth","dialogs","dialogs_item","messages","messages_item","wrapper__btn","btn"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,uBAAT,EAAkCC,0BAAlC,QAAmE,4BAAnE;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzB,MAAIC,KAAK,GAAGD,KAAK,CAACE,WAAlB;AAEE;;AACF,MAAIC,cAAc,GAAGF,KAAK,CAACG,WAAN,CAAkBC,GAAlB,CAAuBC,MAAD,iBACzC,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+C,IAAA,EAAE,EAAED,MAAM,CAACE;AAA1D,KAAoCF,MAAM,CAACE,EAA3C;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AAKA,MAAIC,eAAe,GAAGR,KAAK,CAACS,WAAN,CAAkBL,GAAlB,CAAuBM,SAAD,iBAC1C,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,SAAS,CAACC,GAA5B;AAAoD,IAAA,EAAE,EAAED,SAAS,CAACH;AAAlE,KAAsCG,SAAS,CAACH,EAAhD;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAIE,MAAIK,cAAc,GAAGZ,KAAK,CAACa,eAA3B;;AAEF,MAAIC,gBAAgB,GAAG,MAAK;AAC1Bf,IAAAA,KAAK,CAACgB,WAAN;AACD,GAFD;;AAIA,MAAIC,sBAAsB,GAAIC,CAAD,IAAK;AAChC,QAAIJ,eAAe,GAAGI,CAAC,CAACC,MAAF,CAASC,KAA/B;AACCpB,IAAAA,KAAK,CAACqB,oBAAN,CAA2BP,eAA3B;AACF,GAHD;;AAKA,MAAG,CAACd,KAAK,CAACsB,MAAV,EAAkB,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AAGlB,sBACE;AAAK,IAAA,SAAS,EAAE5B,CAAC,CAAC6B,OAAlB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE7B,CAAC,CAAC8B,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGrB,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAET,CAAC,CAAC+B,QAAlB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE/B,CAAC,CAACgC,aAAlB;AAAA,kBACCjB;AADD;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQE;AAAK,QAAA,SAAS,EAAEf,CAAC,CAACiC,YAAlB;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAGZ,gBAAlB;AAAqC,UAAA,SAAS,EAAErB,CAAC,CAACkC,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAhDD;;KAAM7B,O;AAiDN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport { addMessageActionCreator, updateMessageActionCreator} from \"../../redux/dialogsReducer\"\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage\r\n\r\n    /*We are doing here map*/\r\n  let dialogsElement = state.dialogsData.map((dialog) => (\r\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n  ));\r\n  \r\n\r\n  let messageElements = state.messageData.map((messageEl) => (\r\n    <Message message={messageEl.say} key={messageEl.id} id={messageEl.id} />\r\n  ));\r\n\r\n    let nextMessageAdd = state.nextMessageSend;\r\n\r\n  let onAddMessagePost = () =>{    \r\n    props.sendMessage();\r\n  } \r\n\r\n  let onUpdateNewMessageText = (e)=>{\r\n    let nextMessageSend = e.target.value;\r\n     props.updateNewMessageSend(nextMessageSend)\r\n  }\r\n\r\n  if(!props.isAuth) return <Redirect to={\"/login\"} /> \r\n\r\n  \r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs_item}>\r\n        <h1> Dialogs</h1>\r\n        {dialogsElement}\r\n      </div>\r\n      <div className={s.messages}>\r\n          <div className={s.messages_item}>\r\n          {messageElements}\r\n          </div>   \r\n          <form>\r\n            \r\n          </form>\r\n                \r\n        <div className={s.wrapper__btn}>\r\n          <button onClick={ onAddMessagePost } className={s.btn}>send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n"]},"metadata":{},"sourceType":"module"}